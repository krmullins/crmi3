<?php
// This script and data application were generated by AppGini 23.17
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/Supporters.php');
	include_once(__DIR__ . '/Supporters_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('Supporters');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'Supporters';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`Supporters`.`ID`" => "ID",
		"`Supporters`.`FirstName`" => "FirstName",
		"`Supporters`.`LastName`" => "LastName",
		"`Supporters`.`SpouseName`" => "SpouseName",
		"`Supporters`.`Business`" => "Business",
		"`Supporters`.`Address1`" => "Address1",
		"`Supporters`.`Address2`" => "Address2",
		"`Supporters`.`City`" => "City",
		"`Supporters`.`State`" => "State",
		"`Supporters`.`Zip`" => "Zip",
		"if(CHAR_LENGTH(`Supporters`.`Country`)>20, concat(left(`Supporters`.`Country`,20),' ...'), `Supporters`.`Country`)" => "Country",
		"CONCAT_WS('-', LEFT(`Supporters`.`Phone`,3), MID(`Supporters`.`Phone`,4,3), RIGHT(`Supporters`.`Phone`,4))" => "Phone",
		"CONCAT_WS('-', LEFT(`Supporters`.`Cell`,3), MID(`Supporters`.`Cell`,4,3), RIGHT(`Supporters`.`Cell`,4))" => "Cell",
		"`Supporters`.`Email`" => "Email",
		"`Supporters`.`Status`" => "Status",
		"`Supporters`.`ContactMethod`" => "ContactMethod",
		"`Supporters`.`Grouping`" => "Grouping",
		"`Supporters`.`TotalDonated`" => "TotalDonated",
		"`Supporters`.`TotalMatched`" => "TotalMatched",
		"`Supporters`.`MailingName`" => "MailingName",
		"`Supporters`.`MailingNameFull`" => "MailingNameFull",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`Supporters`.`ID`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => 12,
		13 => 13,
		14 => 14,
		15 => 15,
		16 => 16,
		17 => 17,
		18 => '`Supporters`.`TotalDonated`',
		19 => '`Supporters`.`TotalMatched`',
		20 => 20,
		21 => 21,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`Supporters`.`ID`" => "ID",
		"`Supporters`.`FirstName`" => "FirstName",
		"`Supporters`.`LastName`" => "LastName",
		"`Supporters`.`SpouseName`" => "SpouseName",
		"`Supporters`.`Business`" => "Business",
		"`Supporters`.`Address1`" => "Address1",
		"`Supporters`.`Address2`" => "Address2",
		"`Supporters`.`City`" => "City",
		"`Supporters`.`State`" => "State",
		"`Supporters`.`Zip`" => "Zip",
		"`Supporters`.`Country`" => "Country",
		"CONCAT_WS('-', LEFT(`Supporters`.`Phone`,3), MID(`Supporters`.`Phone`,4,3), RIGHT(`Supporters`.`Phone`,4))" => "Phone",
		"CONCAT_WS('-', LEFT(`Supporters`.`Cell`,3), MID(`Supporters`.`Cell`,4,3), RIGHT(`Supporters`.`Cell`,4))" => "Cell",
		"`Supporters`.`Email`" => "Email",
		"`Supporters`.`Status`" => "Status",
		"`Supporters`.`ContactMethod`" => "ContactMethod",
		"`Supporters`.`Grouping`" => "Grouping",
		"`Supporters`.`TotalDonated`" => "TotalDonated",
		"`Supporters`.`TotalMatched`" => "TotalMatched",
		"`Supporters`.`MailingName`" => "MailingName",
		"`Supporters`.`MailingNameFull`" => "MailingNameFull",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`Supporters`.`ID`" => "ID",
		"`Supporters`.`FirstName`" => "First Name",
		"`Supporters`.`LastName`" => "Last Name",
		"`Supporters`.`SpouseName`" => "Spouse Name",
		"`Supporters`.`Business`" => "Business",
		"`Supporters`.`Address1`" => "Address1",
		"`Supporters`.`Address2`" => "Address2",
		"`Supporters`.`City`" => "City",
		"`Supporters`.`State`" => "State",
		"`Supporters`.`Zip`" => "Zip",
		"`Supporters`.`Country`" => "Country",
		"`Supporters`.`Phone`" => "Phone",
		"`Supporters`.`Cell`" => "Cell",
		"`Supporters`.`Email`" => "Email",
		"`Supporters`.`Status`" => "Status",
		"`Supporters`.`ContactMethod`" => "Contact Method",
		"`Supporters`.`Grouping`" => "Grouping",
		"`Supporters`.`TotalDonated`" => "Total Donated",
		"`Supporters`.`TotalMatched`" => "Total Matched",
		"`Supporters`.`MailingName`" => "Mailing Name",
		"`Supporters`.`MailingNameFull`" => "Mailing Name Full",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`Supporters`.`ID`" => "ID",
		"`Supporters`.`FirstName`" => "FirstName",
		"`Supporters`.`LastName`" => "LastName",
		"`Supporters`.`SpouseName`" => "SpouseName",
		"`Supporters`.`Business`" => "Business",
		"`Supporters`.`Address1`" => "Address1",
		"`Supporters`.`Address2`" => "Address2",
		"`Supporters`.`City`" => "City",
		"`Supporters`.`State`" => "State",
		"`Supporters`.`Zip`" => "Zip",
		"`Supporters`.`Country`" => "Country",
		"CONCAT_WS('-', LEFT(`Supporters`.`Phone`,3), MID(`Supporters`.`Phone`,4,3), RIGHT(`Supporters`.`Phone`,4))" => "Phone",
		"CONCAT_WS('-', LEFT(`Supporters`.`Cell`,3), MID(`Supporters`.`Cell`,4,3), RIGHT(`Supporters`.`Cell`,4))" => "Cell",
		"`Supporters`.`Email`" => "Email",
		"`Supporters`.`Status`" => "Status",
		"`Supporters`.`ContactMethod`" => "ContactMethod",
		"`Supporters`.`Grouping`" => "Grouping",
		"`Supporters`.`TotalDonated`" => "TotalDonated",
		"`Supporters`.`TotalMatched`" => "TotalMatched",
		"`Supporters`.`MailingName`" => "MailingName",
		"`Supporters`.`MailingNameFull`" => "MailingNameFull",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = [];

	$x->QueryFrom = "`Supporters` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = (getLoggedAdmin() !== false);
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 100;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'Supporters_view.php';
	$x->RedirectAfterInsert = 'Supporters_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Supporters';
	$x->TableIcon = 'resources/table_icons/32Px - 002.png';
	$x->PrimaryKey = '`Supporters`.`ID`';
	$x->DefaultSortField = '1';
	$x->DefaultSortDirection = 'asc';

	$x->ColWidth = [150, 150, 150, 150, 150, 100, 100, 150, 150, 150, 150, 150, 150, 150, 150, 100, 150, 150, 150, 100, 100, 100, ];
	$x->ColCaption = ['ID', 'First Name', 'Last Name', 'Spouse Name', 'Business', 'Address1', 'Address2', 'City', 'State', 'Zip', 'Country', 'Phone', 'Cell', 'Email', 'Status', 'Contact Method', 'Grouping', 'Total Donated', 'Total Matched', 'Donations', 'Notes', 'Matching Funds', ];
	$x->ColFieldName = ['ID', 'FirstName', 'LastName', 'SpouseName', 'Business', 'Address1', 'Address2', 'City', 'State', 'Zip', 'Country', 'Phone', 'Cell', 'Email', 'Status', 'ContactMethod', 'Grouping', 'TotalDonated', 'TotalMatched', '%Donations.SupporterID%', '%Notes.SupporterID%', '%MatchingFunds.SupporterID%', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, -1, -1, -1, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/Supporters_templateTV.html';
	$x->SelectedTemplate = 'templates/Supporters_templateTVS.html';
	$x->TemplateDV = 'templates/Supporters_templateDV.html';
	$x->TemplateDVP = 'templates/Supporters_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = true;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: Supporters_init
	$render = true;
	if(function_exists('Supporters_init')) {
		$args = [];
		$render = Supporters_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// column sums
	if(strpos($x->HTML, '<!-- tv data below -->')) {
		// if printing multi-selection TV, calculate the sum only for the selected records
		$record_selector = Request::val('record_selector');
		if(Request::val('Print_x') && is_array($record_selector)) {
			$QueryWhere = '';
			foreach($record_selector as $id) {   // get selected records
				if($id != '') $QueryWhere .= "'" . makeSafe($id) . "',";
			}
			if($QueryWhere != '') {
				$QueryWhere = 'where `Supporters`.`ID` in ('.substr($QueryWhere, 0, -1).')';
			} else { // if no selected records, write the where clause to return an empty result
				$QueryWhere = 'where 1=0';
			}
		} else {
			$QueryWhere = $x->QueryWhere;
		}

		$sumQuery = "SELECT SUM(`Supporters`.`TotalMatched`) FROM {$x->QueryFrom} {$QueryWhere}";
		$res = sql($sumQuery, $eo);
		if($row = db_fetch_row($res)) {
			$sumRow = '<tr class="success sum">';
			if(!Request::val('Print_x')) $sumRow .= '<th class="text-center sum">&sum;</th>';
			$sumRow .= '<td class="Supporters-ID sum"></td>';
			$sumRow .= '<td class="Supporters-FirstName sum"></td>';
			$sumRow .= '<td class="Supporters-LastName sum"></td>';
			$sumRow .= '<td class="Supporters-SpouseName sum"></td>';
			$sumRow .= '<td class="Supporters-Business sum"></td>';
			$sumRow .= '<td class="Supporters-Address1 sum"></td>';
			$sumRow .= '<td class="Supporters-Address2 sum"></td>';
			$sumRow .= '<td class="Supporters-City sum"></td>';
			$sumRow .= '<td class="Supporters-State sum"></td>';
			$sumRow .= '<td class="Supporters-Zip sum"></td>';
			$sumRow .= '<td class="Supporters-Country sum"></td>';
			$sumRow .= '<td class="Supporters-Phone sum"></td>';
			$sumRow .= '<td class="Supporters-Cell sum"></td>';
			$sumRow .= '<td class="Supporters-Email sum"></td>';
			$sumRow .= '<td class="Supporters-Status sum"></td>';
			$sumRow .= '<td class="Supporters-ContactMethod sum"></td>';
			$sumRow .= '<td class="Supporters-Grouping sum"></td>';
			$sumRow .= '<td class="Supporters-TotalDonated sum"></td>';
			$sumRow .= "<td class=\"Supporters-TotalMatched text-right sum locale-float\">{$row[0]}</td>";
			$sumRow .= '<td class="child-Donations-SupporterID child-records-info sum"></td>';
			$sumRow .= '<td class="child-Notes-SupporterID child-records-info sum"></td>';
			$sumRow .= '<td class="child-MatchingFunds-SupporterID child-records-info sum"></td>';
			$sumRow .= '</tr>';

			$x->HTML = str_replace('<!-- tv data below -->', '', $x->HTML);
			$x->HTML = str_replace('<!-- tv data above -->', $sumRow, $x->HTML);
		}
	}

	// hook: Supporters_header
	$headerCode = '';
	if(function_exists('Supporters_header')) {
		$args = [];
		$headerCode = Supporters_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: Supporters_footer
	$footerCode = '';
	if(function_exists('Supporters_footer')) {
		$args = [];
		$footerCode = Supporters_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
